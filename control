// Company: 
// Engineer: 
// 
// Create Date:    11:36:59 11/29/2016 
// Design Name: 
// Module Name:    contrl 
// Project Name: 
// Target Devices: 
// Tool versions: 
// Description: 
//
// Dependencies: 
//
// Revision: 
// Revision 0.01 - File Created
// Additional Comments: 
//
//////////////////////////////////////////////////////////////////////////////////
module contrl(
			clk,
			rst,
			pin_in,
			be_sig,
			rx_en_sig,
			bps_clk,
			cnt_sig,
			rx_d_sig,
//			rx_data
			data
    );
	input clk;
	input rst;
	input pin_in;
	input be_sig;
	input rx_en_sig;
	input bps_clk;
	output cnt_sig;	
	output rx_d_sig;
//   output [7:0] rx_data;

	output reg [7:0]data;
	
	reg [3:0] s;
	reg fin;
	reg icnt;
always@(posedge clk or negedge rst)
	begin
		if(!rst)
			begin
				data <= 8'd0;
				s    <= 4'd0;
				fin  <= 1'd0;
				icnt <= 1'd0;
			end
		else if( rx_en_sig)
			case( s )
				4'd0 : 
						if(be_sig)
							begin
								s    <= s + 1;
								icnt <= 1'd1;
							end
				4'd1:
						if(bps_clk)
							begin
								s <= s + 1;
							end		
				4'd2,4'd3,4'd4,4'd5,4'd6,4'd7,4'd8,4'd9:
						if(bps_clk)
							begin
								s <= s + 1;
								data[ s - 2 ] <= pin_in;
							end	
				4'd10:
						if(bps_clk)
							begin
								s <= s + 1;
							end	
				4'd11:begin
							s    <= s + 1;
							fin  <= 1'd1;
							icnt <= 1'd0;
						end
				4'd12:begin
							s   <= 16'd0 ;
							fin <= 1'd0;
						end
			endcase
	end 
	
//	assign rx_data  = data;
	assign rx_d_sig = fin;
	assign cnt_sig  = icnt;
	
endmodule
